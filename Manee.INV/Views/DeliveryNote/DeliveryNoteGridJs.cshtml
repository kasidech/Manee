@{
    ViewBag.Title = "DeliveryNoteGridJs";
}

<script src="@Url.Content("~/Scripts/extjs/ext-4.1.1a/ext-all.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/extjs/ext-4.1.1a/bootstrap.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/extjs/ext-4.1.1a/example/shared/examples.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Scripts/extjs/ext-4.1.1a/resources/css/ext-all.css")" rel="stylesheet" type="text/css"/>


<style type="text/css">
    #icon-grid {
        visibility: hidden;
    }
</style>

<script type="text/javascript">


    var gridForm;
    Ext.Loader.setConfig({
        enabled: true
    });

    Ext.Loader.setPath('Ext.ux', '../Scripts/extjs/ext-4.1.1a/examples/ux');
    Ext.Loader.setConfig({ enabled: true });

    Ext.require([

    'Ext.grid.*',
    'Ext.data.*',
    'Ext.dd.*',
    'Ext.ux.statusbar.StatusBar'
    ]);


    Ext.define('DataObject', {
        extend: 'Ext.data.Model',
        fields: ['DeliveryNoteNo',
        'RequestNo',
        'OldCode',
        'NewCode',
        'ItemDetail',
        'Qty',
        'Unit',
        'Remark',
        'Date'
        ]
    });

    //var storeSearch;

    Ext.onReady(function () {

        var myData = [
            { DeliveryNoteNo: "1", RequestNo: "0001", OldCode: "o1", NewCode: "n1", ItemDetail: "Steal bar ...", Qty: "1", Unit: "10", Remark: "r1..........", Date: "2010-23-11" },
            { DeliveryNoteNo: "2", RequestNo: "0002", OldCode: "o2", NewCode: "n2", ItemDetail: "0002 Description ...", Qty: "2", Unit: "20", Remark: "r2..........", Date: "2010-23-11" },
            { DeliveryNoteNo: "3", RequestNo: "0003", OldCode: "o3", NewCode: "n3", ItemDetail: "0003 Description ...", Qty: "3", Unit: "30", Remark: "r3..........", Date: "2010-23-11" },
            { DeliveryNoteNo: "4", RequestNo: "0004", OldCode: "o4", NewCode: "n4", ItemDetail: "0004 Description ...", Qty: "4", Unit: "40", Remark: "r4..........", Date: "2010-23-11" },
            { DeliveryNoteNo: "5", RequestNo: "0005", OldCode: "o5", NewCode: "n5", ItemDetail: "0005 Description ...", Qty: "5", Unit: "50", Remark: "r5..........", Date: "2010-23-11" }
        ];

        // create the data store
        var firstGridStore = Ext.create('Ext.data.Store', {
            model: 'DataObject',
            data: myData
        });

        // Column Model shortcut array
        var columns = [
            { text: "Request No", width: 70, sortable: true, dataIndex: 'RequestNo' },
            { text: "Old Code", width: 70, sortable: true, dataIndex: 'OldCode' },
            { text: "New Code", width: 70, sortable: true, dataIndex: 'NewCode' },
            { text: "Item Detail", flex: 1, sortable: true, dataIndex: 'ItemDetail' },
            { text: "Qty", width: 70, sortable: true, dataIndex: 'Qty' },
            { text: "Unit", width: 70, sortable: true, dataIndex: 'Unit' },
            { text: "Remark", width: 70, sortable: true, dataIndex: 'Remark' },
            { text: "Date", width: 70, sortable: true, dataIndex: 'Date' }
        ];

        // declare the source Grid
        var firstGrid = Ext.create('Ext.grid.Panel', {
            renderTo: 'SearchGrid',
            multiSelect: true,
            viewConfig: {
                plugins: {
                    ptype: 'gridviewdragdrop',
                    dragGroup: 'firstGridDDGroup',
                    dropGroup: 'secondGridDDGroup'
                },
                listeners: {
                    drop: function (node, data, dropRec, dropPosition) {
                        var dropOn = dropRec ? ' ' + dropPosition + ' ' + dropRec.get('DeliveryNoteNo') : ' on empty view';
                        // Ext.example.msg("Drag from right to left", 'Dropped ' + data.records[0].get('DeliveryNoteNo') + dropOn);
                    }
                }
            },
            store: firstGridStore,
            columns: columns,
            stripeRows: true,
            title: 'GridSearch',
            margins: '0 2 0 0'
        });


        var secondGridStore = Ext.create('Ext.data.Store', {
            model: 'DataObject'
        });

        // create the destination Grid
        var secondGrid = Ext.create('Ext.grid.Panel', {
            renderTo: 'panel',
            viewConfig: {
                plugins: {
                    ptype: 'gridviewdragdrop',
                    dragGroup: 'secondGridDDGroup',
                    dropGroup: 'firstGridDDGroup'
                },
                listeners: {
                    drop: function (node, data, dropRec, dropPosition) {                         
                        var dropOn = dropRec ? ' ' + dropPosition + ' ' + dropRec.get('DeliveryNoteNo') : ' on empty view';
                       
                        // Ext.example.msg("Drag from left to right", 'Dropped ' + data.records[0].get('DeliveryNoteNo') + dropOn);
                    }
                }
            },
            store: secondGridStore,
            columns: columns,
            stripeRows: true,
            title: 'GridPanel',
            margins: '0 0 0 3'
        });

    });
</script>

